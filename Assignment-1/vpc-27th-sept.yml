AWSTemplateFormatVersion: 2010-09-09
Description: "Creating a VPC stack for EY"

Resources: 
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: Prod

  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: "bilau-nova"
      ImageId: "ami-01c647eace872fc02"
      InstanceType: "t2.micro"
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: key
          Value: value
 
  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      VpcId: !Ref myVPC
      CidrBlock: 10.1.0.0/24
    
  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      VpcId: !Ref myVPC
      CidrBlock: 10.2.0.0/24

  privateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      VpcId: !Ref myVPC
      CidrBlock: 10.3.0.0/24

  privateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      VpcId: !Ref myVPC
      CidrBlock: 10.4.0.0/24
     
  igwName:
    Type: AWS::EC2::InternetGateway
    Properties:
     
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref igwName

  routeTableName:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC

Outputs:
  VPCId:
    Description: "VPC Id"
    Value: !Ref myVPC

  PublicSubnet1Id:
    Description: "Public Subnet 1 Id"
    Value: !Ref PublicSubnet1

  PublicSubnet2Id:
    Description: "Public Subnet 2 Id"
    Value: !Ref PublicSubnet2

  PrivateSubnet1Id:
    Description: "Private Subnet 1 Id"
    Value: !Ref PrivateSubnet1

  PrivateSubnet2Id:
    Description: "Private Subnet 2 Id"
    Value: !Ref PrivateSubnet2
